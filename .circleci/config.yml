#
version: 2
jobs:
  build-job:
    docker:
    - image: circleci/node:8.11-browsers
    steps:
    - checkout
    - attach_workspace:
        at: ~/repo/tmp
    - run:
        name:  Download cc-test-reporter
        command: |
          mkdir -p tmp/
          curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./tmp/cc-test-reporter
          chmod +x ./tmp/cc-test-reporter
    - persist_to_workspace:
        root: tmp
        paths:
        - cc-test-reporter
    # Download and cache dependencies
    - restore_cache:
        keys:
        - v1-dependencies-{{ checksum "package.json" }}
        # fallback to using the latest cache if no exact match is found
        - v1-dependencies-

    - run: npm install

    - save_cache:
        paths:
        - node_modules
        key: v1-dependencies-{{ checksum "package.json" }}

    - run: npm run lint
#    - run:
#        name: Run frontend tests
#        command: |
#          npm run test-headless --code-coverage
#          pwd
#          ls -al
#          ls -al tmp
#          ls -al src
#          ./tmp/cc-test-reporter format-coverage -t lcov -o tmp/codeclimate.frontend.json src/lcov.info
#    - run:
#        name: Upload coverage results to Code Climate
#        command: |
#              ./tmp/cc-test-reporter upload-coverage -i tmp/codeclimate.frontend.json
    - persist_to_workspace:
        root: .
        paths:
        - .


  deploy-job:
    docker:
    - image: circleci/node:8.11
    steps:
    - checkout
    - attach_workspace:
        at: ~/repo/tmp
    # Download and cache dependencies
    - restore_cache:
        keys:
        - v1-dependencies-{{ checksum "package.json" }}
        # fallback to using the latest cache if no exact match is found
        - v1-dependencies-

    - run:
        name: Installing Firebase-tools
        command: |
          sudo npm install -g firebase-tools @google-cloud/functions-emulator
    - run: npm install

    - save_cache:
        paths:
        - node_modules
        key: v1-dependencies-{{ checksum "package.json" }}
    - run:
        name: Build app in production mode
        command: |
          npm run build
    - run:
        name: Deploy app  in Master branch to firebase
        command: |
          pwd
          echo $PATH
          echo "Files at current dir "
          ls -al
          ln -s ./node_modules/.bin/firebase .
          echo "Lanching firebase command"
          firebase deploy --token=$FIREBASE_DEPLOY_TOKEN

workflows:
  version: 2
  build-deploy:
    jobs:
    - build-job
    - deploy-job:
        requires:
        - build-job
        filters:
          branches:
            only: master
